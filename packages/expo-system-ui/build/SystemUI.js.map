{"version":3,"file":"SystemUI.js","sourceRoot":"","sources":["../src/SystemUI.ts"],"names":[],"mappings":"AAAA,OAAO,EAAc,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE9E,OAAO,YAAkC,MAAM,gBAAgB,CAAC;AAIhE;;;;;;;;;GASG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,KAAwB;IACpE,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,MAAM,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;KACzD;SAAM;QACL,MAAM,WAAW,GAAG,QAAQ,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxE,OAAO,MAAM,YAAY,CAAC,uBAAuB,CAAC,WAAgC,CAAC,CAAC;KACrF;AACH,CAAC;AAED;;;;;;;;GAQG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB;IAC3C,OAAO,MAAM,YAAY,CAAC,uBAAuB,EAAE,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,MAAwB;IAC1D,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,GAAG,MAAM,CAAC;IACtD,MAAM,WAAW,GAAG,UAAU,CAAC,cAAc,EAAE,IAAI,OAAO,CAAC;IAC3D,MAAM,YAAY,GAAG,WAAW,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IAEhE,YAAY,CAAC,mBAAmB,CAAC;QAC/B,cAAc,EAAE,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc;QACzE,kBAAkB,EAAE,kBAAkB,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,kBAAkB;QACrF,eAAe,EAAE,MAAM,CAAC,eAAe;QACvC,mBAAmB,EAAE,MAAM,CAAC,mBAAmB;KAChD,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { ColorValue, Platform, processColor, Appearance } from 'react-native';\n\nimport ExpoSystemUI, { SystemBarsConfig } from './ExpoSystemUI';\n\nexport type { SystemBarStyle } from './ExpoSystemUI';\n\n/**\n * Changes the root view background color.\n * Call this function in the root file outside of you component.\n *\n * @example\n * ```ts\n * SystemUI.setBackgroundColorAsync(\"black\");\n * ```\n * @param color Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\n */\nexport async function setBackgroundColorAsync(color: ColorValue | null): Promise<void> {\n  if (color == null) {\n    return await ExpoSystemUI.setBackgroundColorAsync(null);\n  } else {\n    const colorNumber = Platform.OS === 'web' ? color : processColor(color);\n    return await ExpoSystemUI.setBackgroundColorAsync(colorNumber as ColorValue | null);\n  }\n}\n\n/**\n * Gets the root view background color.\n *\n * @example\n * ```ts\n * const color = await SystemUI.getBackgroundColorAsync();\n * ```\n * @returns Current root view background color in hex format. Returns `null` if the background color is not set.\n */\nexport async function getBackgroundColorAsync(): Promise<ColorValue | null> {\n  return await ExpoSystemUI.getBackgroundColorAsync();\n}\n\nexport function setSystemBarsConfig(config: SystemBarsConfig): void {\n  const { statusBarStyle, navigationBarStyle } = config;\n  const colorScheme = Appearance.getColorScheme() ?? 'light';\n  const autoBarStyle = colorScheme === 'light' ? 'dark' : 'light';\n\n  ExpoSystemUI.setSystemBarsConfig({\n    statusBarStyle: statusBarStyle === 'auto' ? autoBarStyle : statusBarStyle,\n    navigationBarStyle: navigationBarStyle === 'auto' ? autoBarStyle : navigationBarStyle,\n    statusBarHidden: config.statusBarHidden,\n    navigationBarHidden: config.navigationBarHidden,\n  });\n}\n"]}